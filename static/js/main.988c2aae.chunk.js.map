{"version":3,"sources":["components/InteractiveMap.js","components/ModelViewerThree.js","actions/index.js","App.js","reportWebVitals.js","serviceWorker.js","reducers/setModelLoadedReducer.js","reducers/allReducers.js","index.js"],"names":["mapImagesArray","activeIconsArray","InteractiveMap","props","startMapAnimation","setState","mapAnimationStarted","mapIconClicked","index","categoryType","initialState","state","categoriesWindowOpen","undefined","mapIconClickedIndex","categoryButtonClicked","category","enterVirtualTourClicked","virtualTourOpen","document","webkitExitFullscreen","iframeRef","current","requestFullscreen","activeIconsRefs","audioAboutRef","React","createRef","classAboutButton","this","classTourButton","className","map","imageNumber","style","zIndex","animationDelay","animationPlayState","backgroundImage","activeIcon","onClick","display","ref","allowFullScreen","src","title","frameBorder","containerType","Component","objectTransforms","ModelViewerThree","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","model","rotation","y","renderScene","window","renderer","render","scene","camera","modelLoading","width","mount","clientWidth","height","clientHeight","THREE","alpha","antialias","setClearColor","setSize","appendChild","domElement","addCamera","addLights","addModels","position","scale","transform","x","z","OrbitControls","rotateSpeed","lights","add","modelUrl","manager","onStart","setModelLoaded","onLoad","onProgress","loader","GLTFLoader","load","gltf","setModelTransforms","texture","TextureLoader","wrapS","flipY","modelMaterial","MeshStandardMaterial","roughness","side","traverse","object","isMesh","material","xhr","error","removeChild","modelLoaded","mapDispatchToProps","bool","type","payload","connect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","setModelLoadedReducer","action","combineReducers","store","createStore","reducers","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.988c2aae.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import ModelViewerThree from \"./ModelViewerThree\";\r\nconst mapImagesArray = [8, 7, 6, 5, 4, 3, 2, 1];\r\nconst activeIconsArray = [\r\n  [\r\n    \"hill\",\r\n    \"Kalniškių piliakalnis\",\r\n    `\r\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Nesciunt ea cupiditate magnam. Numquam tenetur ullam iusto officiis, repellendus quo sequi!\r\n  `\r\n  ],\r\n  [\r\n    \"hill\",\r\n    \"Ivangėnų I,II piliakalniai\",\r\n    `\r\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Nesciunt ea cupiditate magnam. Numquam tenetur ullam iusto officiis, repellendus quo sequi!\r\n  `\r\n  ],\r\n  [\r\n    \"hill\",\r\n    \"Nosaičių piliakalnis\",\r\n    `\r\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Nesciunt ea cupiditate magnam. Numquam tenetur ullam iusto officiis, repellendus quo sequi!\r\n  `\r\n  ],\r\n  [\r\n    \"hill\",\r\n    \"Juškaičių piliakalnis\",\r\n    `\r\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Nesciunt ea cupiditate magnam. Numquam tenetur ullam iusto officiis, repellendus quo sequi!\r\n  `\r\n  ],\r\n  [\r\n    \"gallery\",\r\n    \"Galerija\",\r\n    `\r\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Nesciunt ea cupiditate magnam. Numquam tenetur ullam iusto officiis, repellendus quo sequi!\r\n  `\r\n  ]\r\n];\r\n\r\nexport class InteractiveMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mapAnimationStarted: false,\r\n      categoriesWindowOpen: false,\r\n      mapIconClickedIndex: 0,\r\n      categoryType: \"about\",\r\n      virtualTourOpen: false\r\n    };\r\n    this.activeIconsRefs = {};\r\n    this.audioAboutRef = React.createRef();\r\n    this.iframeRef = React.createRef();\r\n  }\r\n\r\n  startMapAnimation = () => {\r\n    this.setState({ mapAnimationStarted: true });\r\n  };\r\n\r\n  mapIconClicked = (index, categoryType) => {\r\n    let initialState = this.state.categoriesWindowOpen;\r\n    this.setState({ categoriesWindowOpen: !initialState });\r\n    if (index !== undefined) {\r\n      this.setState({ mapIconClickedIndex: index });\r\n    } else {\r\n      this.setState({ categoryType: \"about\" });\r\n    }\r\n  };\r\n\r\n  categoryButtonClicked = (category) => {\r\n    this.setState({ categoryType: category });\r\n  };\r\n\r\n  enterVirtualTourClicked = () => {\r\n    let initialState = this.state.virtualTourOpen;\r\n    if (initialState) {\r\n      document.webkitExitFullscreen();\r\n    } else {\r\n      this.iframeRef.current.requestFullscreen();\r\n    }\r\n    this.setState({ virtualTourOpen: !initialState });\r\n  };\r\n\r\n  render() {\r\n    const classAboutButton = this.state.categoryType === \"about\" ? \"active-category-button\" : \"\";\r\n    const classTourButton = this.state.categoryType === \"tour\" ? \"active-category-button\" : \"\";\r\n\r\n    return (\r\n      <div className=\"interactive-map-container\">\r\n        <div className=\"about-project-container\">\r\n          <div className=\"title\">Zemelapis</div>\r\n          <div className=\"description\">\r\n            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit harum, voluptatibus blanditiis adipisci enim quaerat at\r\n            neque officia tenetur nemo placeat molestiae, fugit est molestias porro. Iure non vitae aliquid?\r\n          </div>\r\n        </div>\r\n        <div className=\"interactive-map-images\">\r\n          <div className=\"image-carousel\">\r\n            {mapImagesArray.map((imageNumber, index) => {\r\n              return (\r\n                <div\r\n                  className=\"image\"\r\n                  key={index}\r\n                  style={{\r\n                    zIndex: imageNumber,\r\n                    animationDelay: `${index}s`,\r\n                    animationPlayState: this.state.mapAnimationStarted ? \"running\" : \"paused\",\r\n                    backgroundImage: `url(\"./images/map/${imageNumber}.jpg\")`\r\n                  }}\r\n                ></div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"active-icons-container\">\r\n            {activeIconsArray.map((activeIcon, index) => {\r\n              return (\r\n                <div className=\"icon-container\" key={index} onClick={() => this.mapIconClicked(index)}>\r\n                  <div className=\"icon-glow icon\"></div>\r\n                  <div className=\"icon-image icon\"></div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"overlay-start-container\" style={{ display: this.state.mapAnimationStarted ? \"none\" : \"flex\" }}>\r\n          <div\r\n            className=\"btn btn-start\"\r\n            onClick={() => {\r\n              this.startMapAnimation();\r\n            }}\r\n          >\r\n            Pradėti turą\r\n          </div>\r\n        </div>\r\n        <div className=\"categories-window-container\" style={{ display: this.state.categoriesWindowOpen ? \"flex\" : \"none\" }}>\r\n          <div className=\"buttons-container\">\r\n            <div\r\n              className={`btn btn-about ${classAboutButton}`}\r\n              onClick={() => {\r\n                this.categoryButtonClicked(\"about\");\r\n              }}\r\n            >\r\n              Apie\r\n            </div>\r\n            <div\r\n              className={`btn btn-tour ${classTourButton}`}\r\n              onClick={() => {\r\n                this.categoryButtonClicked(\"tour\");\r\n              }}\r\n            >\r\n              360 turas\r\n            </div>\r\n\r\n            <div className=\"btn btn-close\" onClick={() => this.mapIconClicked()}>\r\n              X\r\n            </div>\r\n          </div>\r\n          <div className=\"container-about\" style={{ display: this.state.categoryType === \"about\" ? \"flex\" : \"none\" }}>\r\n            <div className=\"title\">{activeIconsArray[this.state.mapIconClickedIndex][1]}</div>\r\n            <div className=\"description\">{activeIconsArray[this.state.mapIconClickedIndex][2]}</div>\r\n          </div>\r\n          <div className=\"container-tour\" style={{ display: this.state.categoryType === \"tour\" ? \"flex\" : \"none\" }}>\r\n            <p>Jūs einate į</p>\r\n            <p>360° virtualų turą</p>\r\n            <div\r\n              className=\"btn btn-start\"\r\n              onClick={() => {\r\n                this.enterVirtualTourClicked();\r\n              }}\r\n            >\r\n              Pradėti\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* 360 virtual tour window */}\r\n        <div\r\n          className=\"tour-window-container\"\r\n          style={{ display: this.state.virtualTourOpen ? \"flex\" : \"none\" }}\r\n          ref={this.iframeRef}\r\n          allowFullScreen\r\n        >\r\n          {/* <ModelViewerThree\r\n            containerType={\"gallery\"}\r\n            contentIndex={1}\r\n            key={this.state.virtualTourOpen}\r\n            virtualTourOpen={this.state.virtualTourOpen}\r\n          /> */}\r\n          <iframe\r\n            src={`http://panorama.seduvoskultura.lt/#media-name=Seduva_2_1`}\r\n            title=\"virtual tour\"\r\n            frameBorder=\"0\"\r\n            allowFullScreen\r\n            key={`iframe${this.state.containerType}`}\r\n          ></iframe>\r\n          <div\r\n            className=\"btn btn-close\"\r\n            onClick={() => {\r\n              this.enterVirtualTourClicked();\r\n            }}\r\n          >\r\n            X\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InteractiveMap;\r\n","import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { TextureLoader, MeshStandardMaterial } from \"three\";\nimport { connect } from \"react-redux\";\nimport { setModelLoaded } from \"../actions\";\n\nimport OrbitControls from \"three-orbitcontrols\";\n\nconst objectTransforms = [\n  [\n    [0, 0, 0],\n    [0, 0, 0],\n    [1.1, 1.1, 1.1]\n  ]\n];\n\nclass ModelViewerThree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modelLoading: false\n    };\n  }\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n    this.scene = new THREE.Scene({ alpha: true });\n\n    this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\n    this.renderer.setClearColor(0x000000, 0);\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement);\n\n    this.addCamera(width, height);\n    this.addLights();\n    this.addModels();\n\n    this.renderScene();\n    this.start();\n  }\n\n  setModelTransforms() {\n    const { position, rotation, scale } = this.model;\n    const modelTransfors = [position, rotation, scale];\n    modelTransfors.map((transform, index) => {\n      transform.x = objectTransforms[0][index][0];\n      transform.y = objectTransforms[0][index][1];\n      transform.z = objectTransforms[0][index][2];\n      return null;\n    });\n  }\n\n  addCamera(width, height) {\n    let FOV = 50;\n    let positionZ = 20;\n    let positionY = 0;\n\n    this.camera = new THREE.PerspectiveCamera(FOV, width / height, 0.1, 1000);\n    this.camera.position.z = positionZ;\n    this.camera.position.y = positionY;\n    const controls = new OrbitControls(this.camera, this.renderer.domElement);\n    controls.rotateSpeed = 0.3;\n  }\n\n  addLights() {\n    var lights = [];\n    lights[0] = new THREE.AmbientLight(\"white\", 1, 0);\n    this.scene.add(lights[0]);\n  }\n\n  addModels() {\n    let modelUrl;\n    let textureUrl;\n    modelUrl = `./models/sphere.glb`;\n    textureUrl = `./textures/panorama01.jpg`;\n\n    const manager = new THREE.LoadingManager();\n    manager.onStart = () => {\n      //this.setState({ modelLoading: true });\n      this.props.setModelLoaded(false);\n    };\n\n    manager.onLoad = () => {\n      // this.setState({ modelLoading: false });\n      this.props.setModelLoaded(true);\n    };\n\n    manager.onProgress = function () {};\n\n    this.loader = new GLTFLoader();\n    if (modelUrl !== undefined) {\n      this.loader.load(\n        modelUrl,\n        (gltf) => {\n          this.model = gltf.scene;\n          this.setModelTransforms();\n          const textureLoader = new TextureLoader(manager);\n          const texture = textureLoader.load(textureUrl);\n          texture.wrapS = THREE.RepeatWrapping;\n          texture.flipY = false;\n          const modelMaterial = new MeshStandardMaterial({\n            roughness: 0.7,\n            map: texture\n          });\n          modelMaterial.side = THREE.DoubleSide;\n          this.model.traverse(function (object) {\n            if (object.isMesh) {\n              object.material = modelMaterial;\n            }\n          });\n          this.scene.add(this.model);\n        },\n        function (xhr) {\n          // console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n        },\n        function (error) {\n          //console.log(\"An error happened\");\n        }\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  };\n\n  stop = () => {\n    cancelAnimationFrame(this.frameId);\n  };\n\n  animate = () => {\n    let rotationSpeed = 0.001;\n    if (this.model) this.model.rotation.y += rotationSpeed;\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  };\n\n  renderScene = () => {\n    if (this.renderer) this.renderer.render(this.scene, this.camera);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"model-view-container\"\n        key={this.props.virtualTourOpen}\n        ref={(mount) => {\n          this.mount = mount;\n        }}\n      >\n        <div className=\"loading-screen\" style={{ display: this.props.modelLoaded ? \"none\" : \"flex\" }}>\n          <div className=\"text\">Kraunama...</div>\n          <div className=\"icon\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    modelLoaded: state.setModelLoaded.modelLoaded\n  };\n};\n\nconst mapDispatchToProps = {\n  setModelLoaded\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelViewerThree);\n","export const mouseEnterMap = (bool) => {\r\n  return {\r\n    type: \"MOUSE_ENTER_MAP\",\r\n    payload: bool\r\n  };\r\n};\r\n\r\nexport const setScrollPosition = (number) => {\r\n  return {\r\n    type: \"SET_SCROLL_POSITION\",\r\n    payload: number\r\n  };\r\n};\r\n\r\nexport const playBackgroundAudio = (bool) => {\r\n  return {\r\n    type: \"PLAY_BACKGROUND_AUDIO\",\r\n    payload: bool\r\n  };\r\n};\r\n\r\nexport const setModelLoaded = (bool) => {\r\n  return {\r\n    type: \"SET_MODEL_LOADED\",\r\n    payload: bool\r\n  };\r\n};\r\n","import React from \"react\";\n\nimport InteractiveMap from \"./components/InteractiveMap\";\nimport ModelViewerThree from \"./components/ModelViewerThree\";\n\n// \"homepage\": \"https://robertasliekis.github.io/skaudvile/\",\n// \"homepage\": \"http://zemelapis.kernave.org/\",\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"overflow-wrapper\">\n        <div className=\"website-wrapper\">\n          <InteractiveMap />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA\");\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\"New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.\");\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  modelLoaded: false\r\n};\r\n\r\nconst setModelLoadedReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_MODEL_LOADED\":\r\n      return { ...state, modelLoaded: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default setModelLoadedReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport setModelLoaded from \"./setModelLoadedReducer\";\r\n\r\nexport default combineReducers({\r\n  setModelLoaded: setModelLoaded\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers/allReducers\";\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n//serviceWorker.register();\nreportWebVitals();\n"],"sourceRoot":""}